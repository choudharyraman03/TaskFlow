{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":277},"end":{"line":2,"column":31,"index":308}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"./utils/fetchData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":374},"end":{"line":4,"column":46,"index":420}}],"key":"bvuZtUrCBORS7e0mnZMXcup8nyI=","exportNames":["*"]}},{"name":"./xmlTags","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":421},"end":{"line":5,"column":33,"index":454}}],"key":"UjGGlBNdDx1pDIGgBuGLg90Be9Q=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SvgAst = SvgAst;\n  exports.SvgFromXml = exports.SvgFromUri = void 0;\n  exports.SvgUri = SvgUri;\n  exports.SvgXml = SvgXml;\n  exports.astToReact = astToReact;\n  exports.camelCase = void 0;\n  exports.getStyle = getStyle;\n  exports.parse = parse;\n  Object.defineProperty(exports, \"tags\", {\n    enumerable: true,\n    get: function () {\n      return _xmlTags.tags;\n    }\n  });\n  var _react = _interopRequireWildcard(require(_dependencyMap[0], \"react\"));\n  var React = _react;\n  var _fetchData = require(_dependencyMap[1], \"./utils/fetchData\");\n  var _xmlTags = require(_dependencyMap[2], \"./xmlTags\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  function _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function (n) {\n      for (var e = 1; e < arguments.length; e++) {\n        var t = arguments[e];\n        for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n      }\n      return n;\n    }, _extends.apply(null, arguments);\n  }\n  function missingTag() {\n    return null;\n  }\n  function SvgAst({\n    ast,\n    override\n  }) {\n    if (!ast) {\n      return null;\n    }\n    const {\n      props,\n      children\n    } = ast;\n    const Svg = _xmlTags.tags.svg;\n    return /*#__PURE__*/React.createElement(Svg, _extends({}, props, override), children);\n  }\n  const err = console.error.bind(console);\n  function SvgXml(props) {\n    const {\n      onError = err,\n      xml,\n      override,\n      fallback\n    } = props;\n    try {\n      const ast = (0, _react.useMemo)(() => xml !== null ? parse(xml) : null, [xml]);\n      return /*#__PURE__*/React.createElement(SvgAst, {\n        ast: ast,\n        override: override || props\n      });\n    } catch (error) {\n      onError(error);\n      return fallback ?? null;\n    }\n  }\n  function SvgUri(props) {\n    const {\n      onError = err,\n      uri,\n      onLoad,\n      fallback\n    } = props;\n    const [xml, setXml] = (0, _react.useState)(null);\n    const [isError, setIsError] = (0, _react.useState)(false);\n    (0, _react.useEffect)(() => {\n      uri ? (0, _fetchData.fetchText)(uri).then(data => {\n        setXml(data);\n        isError && setIsError(false);\n        onLoad === null || onLoad === void 0 || onLoad();\n      }).catch(e => {\n        onError(e);\n        setIsError(true);\n      }) : setXml(null);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [onError, uri, onLoad]);\n    if (isError) {\n      return fallback ?? null;\n    }\n    return /*#__PURE__*/React.createElement(SvgXml, {\n      xml: xml,\n      override: props,\n      fallback: fallback\n    });\n  }\n\n  // Extending Component is required for Animated support.\n\n  class SvgFromXml extends _react.Component {\n    state = {\n      ast: null\n    };\n    componentDidMount() {\n      this.parse(this.props.xml);\n    }\n    componentDidUpdate(prevProps) {\n      const {\n        xml\n      } = this.props;\n      if (xml !== prevProps.xml) {\n        this.parse(xml);\n      }\n    }\n    parse(xml) {\n      const {\n        onError = err\n      } = this.props;\n      try {\n        this.setState({\n          ast: xml ? parse(xml) : null\n        });\n      } catch (e) {\n        const error = e;\n        onError(Object.assign({}, error, {\n          message: `[RNSVG] Couldn't parse SVG, reason: ${error.message}`\n        }));\n      }\n    }\n    render() {\n      const {\n        props,\n        state: {\n          ast\n        }\n      } = this;\n      return /*#__PURE__*/React.createElement(SvgAst, {\n        ast: ast,\n        override: props.override || props\n      });\n    }\n  }\n  exports.SvgFromXml = SvgFromXml;\n  class SvgFromUri extends _react.Component {\n    state = {\n      xml: null\n    };\n    componentDidMount() {\n      this.fetch(this.props.uri);\n    }\n    componentDidUpdate(prevProps) {\n      const {\n        uri\n      } = this.props;\n      if (uri !== prevProps.uri) {\n        this.fetch(uri);\n      }\n    }\n    async fetch(uri) {\n      try {\n        this.setState({\n          xml: uri ? await (0, _fetchData.fetchText)(uri) : null\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    render() {\n      const {\n        props,\n        state: {\n          xml\n        }\n      } = this;\n      return /*#__PURE__*/React.createElement(SvgFromXml, {\n        xml: xml,\n        override: props,\n        onError: props.onError\n      });\n    }\n  }\n  exports.SvgFromUri = SvgFromUri;\n  const upperCase = (_match, letter) => letter.toUpperCase();\n  const camelCase = phrase => phrase.replace(/[:-]([a-z])/g, upperCase);\n  exports.camelCase = camelCase;\n  function getStyle(string) {\n    const style = {};\n    const declarations = string.split(';').filter(v => v.trim());\n    const {\n      length\n    } = declarations;\n    for (let i = 0; i < length; i++) {\n      const declaration = declarations[i];\n      if (declaration.length !== 0) {\n        const split = declaration.split(':');\n        const property = split[0];\n        const value = split[1];\n        style[camelCase(property.trim())] = value.trim();\n      }\n    }\n    return style;\n  }\n  function astToReact(value, index) {\n    if (typeof value === 'object') {\n      const {\n        Tag,\n        props,\n        children\n      } = value;\n      if (props !== null && props !== void 0 && props.class) {\n        props.className = props.class;\n        delete props.class;\n      }\n      return /*#__PURE__*/React.createElement(Tag, _extends({\n        key: index\n      }, props), children.map(astToReact));\n    }\n    return value;\n  }\n\n  // slimmed down parser based on https://github.com/Rich-Harris/svg-parser\n\n  function repeat(str, i) {\n    let result = '';\n    while (i--) {\n      result += str;\n    }\n    return result;\n  }\n  const toSpaces = tabs => repeat('  ', tabs.length);\n  function locate(source, i) {\n    const lines = source.split('\\n');\n    const nLines = lines.length;\n    let column = i;\n    let line = 0;\n    for (; line < nLines; line++) {\n      const {\n        length\n      } = lines[line];\n      if (column >= length) {\n        column -= length;\n      } else {\n        break;\n      }\n    }\n    const before = source.slice(0, i).replace(/^\\t+/, toSpaces);\n    const beforeExec = /(^|\\n).*$/.exec(before);\n    const beforeLine = beforeExec && beforeExec[0] || '';\n    const after = source.slice(i);\n    const afterExec = /.*(\\n|$)/.exec(after);\n    const afterLine = afterExec && afterExec[0];\n    const pad = repeat(' ', beforeLine.length);\n    const snippet = `${beforeLine}${afterLine}\\n${pad}^`;\n    return {\n      line,\n      column,\n      snippet\n    };\n  }\n  const validNameCharacters = /[a-zA-Z0-9:_-]/;\n  const commentStart = /<!--/;\n  const whitespace = /[\\s\\t\\r\\n]/;\n  const quotemarks = /['\"]/;\n  function parse(source, middleware) {\n    const length = source.length;\n    let currentElement = null;\n    let state = metadata;\n    let children = null;\n    let root;\n    const stack = [];\n    function error(message) {\n      const {\n        line,\n        column,\n        snippet\n      } = locate(source, i);\n      throw new Error(`${message} (${line}:${column}). If this is valid SVG, it's probably a bug. Please raise an issue\\n\\n${snippet}`);\n    }\n    function metadata() {\n      while (i + 1 < length && (source[i] !== '<' || !(validNameCharacters.test(source[i + 1]) || commentStart.test(source.slice(i, i + 4))))) {\n        i++;\n      }\n      return neutral();\n    }\n    function neutral() {\n      let text = '';\n      let char;\n      while (i < length && (char = source[i]) !== '<') {\n        text += char;\n        i += 1;\n      }\n      if (/\\S/.test(text)) {\n        children.push(text);\n      }\n      if (source[i] === '<') {\n        return openingTag;\n      }\n      return neutral;\n    }\n    function openingTag() {\n      const char = source[i];\n      if (char === '?') {\n        return neutral;\n      } // <?xml...\n\n      if (char === '!') {\n        const start = i + 1;\n        if (source.slice(start, i + 3) === '--') {\n          return comment;\n        }\n        const end = i + 8;\n        if (source.slice(start, end) === '[CDATA[') {\n          return cdata;\n        }\n        if (/doctype/i.test(source.slice(start, end))) {\n          return neutral;\n        }\n      }\n      if (char === '/') {\n        return closingTag;\n      }\n      const tag = getName();\n      const props = {};\n      const element = {\n        tag,\n        props,\n        children: [],\n        parent: currentElement,\n        Tag: _xmlTags.tags[tag] || missingTag\n      };\n      if (currentElement) {\n        children.push(element);\n      } else {\n        root = element;\n      }\n      getAttributes(props);\n      const {\n        style\n      } = props;\n      if (typeof style === 'string') {\n        element.styles = style;\n        props.style = getStyle(style);\n      }\n      let selfClosing = false;\n      if (source[i] === '/') {\n        i += 1;\n        selfClosing = true;\n      }\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n      if (!selfClosing) {\n        currentElement = element;\n        ({\n          children\n        } = element);\n        stack.push(element);\n      }\n      return neutral;\n    }\n    function comment() {\n      const index = source.indexOf('-->', i);\n      if (!~index) {\n        error('expected -->');\n      }\n      i = index + 2;\n      return neutral;\n    }\n    function cdata() {\n      const index = source.indexOf(']]>', i);\n      if (!~index) {\n        error('expected ]]>');\n      }\n      children.push(source.slice(i + 7, index));\n      i = index + 2;\n      return neutral;\n    }\n    function closingTag() {\n      const tag = getName();\n      if (!tag) {\n        error('Expected tag name');\n      }\n      if (currentElement && tag !== currentElement.tag) {\n        error(`Expected closing tag </${tag}> to match opening tag <${currentElement.tag}>`);\n      }\n      allowSpaces();\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n      stack.pop();\n      currentElement = stack[stack.length - 1];\n      if (currentElement) {\n        ({\n          children\n        } = currentElement);\n      }\n      return neutral;\n    }\n    function getName() {\n      let name = '';\n      let char;\n      while (i < length && validNameCharacters.test(char = source[i])) {\n        name += char;\n        i += 1;\n      }\n      return name;\n    }\n    function getAttributes(props) {\n      while (i < length) {\n        if (!whitespace.test(source[i])) {\n          return;\n        }\n        allowSpaces();\n        const name = getName();\n        if (!name) {\n          return;\n        }\n        let value = true;\n        allowSpaces();\n        if (source[i] === '=') {\n          i += 1;\n          allowSpaces();\n          value = getAttributeValue();\n          if (name !== 'id' && !isNaN(+value) && value.trim() !== '') {\n            value = +value;\n          }\n        }\n        props[camelCase(name)] = value;\n      }\n    }\n    function getAttributeValue() {\n      return quotemarks.test(source[i]) ? getQuotedAttributeValue() : getUnquotedAttributeValue();\n    }\n    function getUnquotedAttributeValue() {\n      let value = '';\n      do {\n        const char = source[i];\n        if (char === ' ' || char === '>' || char === '/') {\n          return value;\n        }\n        value += char;\n        i += 1;\n      } while (i < length);\n      return value;\n    }\n    function getQuotedAttributeValue() {\n      const quotemark = source[i++];\n      let value = '';\n      let escaped = false;\n      while (i < length) {\n        const char = source[i++];\n        if (char === quotemark && !escaped) {\n          return value;\n        }\n        if (char === '\\\\' && !escaped) {\n          escaped = true;\n        }\n        value += escaped ? `\\\\${char}` : char;\n        escaped = false;\n      }\n      return value;\n    }\n    function allowSpaces() {\n      while (i < length && whitespace.test(source[i])) {\n        i += 1;\n      }\n    }\n    let i = 0;\n    while (i < length) {\n      if (!state) {\n        error('Unexpected character');\n      }\n      state = state();\n      i += 1;\n    }\n    if (state !== neutral) {\n      error('Unexpected end of input');\n    }\n    if (root) {\n      const xml = (middleware ? middleware(root) : root) || root;\n      const ast = xml.children.map(astToReact);\n      const jsx = xml;\n      jsx.children = ast;\n      return jsx;\n    }\n    return null;\n  }\n});","lineCount":489,"map":[[19,2,2,0],[19,6,2,0,"_react"],[19,12,2,0],[19,15,2,0,"_interopRequireWildcard"],[19,38,2,0],[19,39,2,0,"require"],[19,46,2,0],[19,47,2,0,"_dependencyMap"],[19,61,2,0],[20,2,2,31],[20,6,2,31,"React"],[20,11,2,31],[20,14,2,31,"_react"],[20,20,2,31],[21,2,4,0],[21,6,4,0,"_fetchData"],[21,16,4,0],[21,19,4,0,"require"],[21,26,4,0],[21,27,4,0,"_dependencyMap"],[21,41,4,0],[22,2,5,0],[22,6,5,0,"_xmlTags"],[22,14,5,0],[22,17,5,0,"require"],[22,24,5,0],[22,25,5,0,"_dependencyMap"],[22,39,5,0],[23,2,5,33],[23,11,5,33,"_interopRequireWildcard"],[23,35,5,33,"e"],[23,36,5,33],[23,38,5,33,"t"],[23,39,5,33],[23,68,5,33,"WeakMap"],[23,75,5,33],[23,81,5,33,"r"],[23,82,5,33],[23,89,5,33,"WeakMap"],[23,96,5,33],[23,100,5,33,"n"],[23,101,5,33],[23,108,5,33,"WeakMap"],[23,115,5,33],[23,127,5,33,"_interopRequireWildcard"],[23,150,5,33],[23,162,5,33,"_interopRequireWildcard"],[23,163,5,33,"e"],[23,164,5,33],[23,166,5,33,"t"],[23,167,5,33],[23,176,5,33,"t"],[23,177,5,33],[23,181,5,33,"e"],[23,182,5,33],[23,186,5,33,"e"],[23,187,5,33],[23,188,5,33,"__esModule"],[23,198,5,33],[23,207,5,33,"e"],[23,208,5,33],[23,214,5,33,"o"],[23,215,5,33],[23,217,5,33,"i"],[23,218,5,33],[23,220,5,33,"f"],[23,221,5,33],[23,226,5,33,"__proto__"],[23,235,5,33],[23,243,5,33,"default"],[23,250,5,33],[23,252,5,33,"e"],[23,253,5,33],[23,270,5,33,"e"],[23,271,5,33],[23,294,5,33,"e"],[23,295,5,33],[23,320,5,33,"e"],[23,321,5,33],[23,330,5,33,"f"],[23,331,5,33],[23,337,5,33,"o"],[23,338,5,33],[23,341,5,33,"t"],[23,342,5,33],[23,345,5,33,"n"],[23,346,5,33],[23,349,5,33,"r"],[23,350,5,33],[23,358,5,33,"o"],[23,359,5,33],[23,360,5,33,"has"],[23,363,5,33],[23,364,5,33,"e"],[23,365,5,33],[23,375,5,33,"o"],[23,376,5,33],[23,377,5,33,"get"],[23,380,5,33],[23,381,5,33,"e"],[23,382,5,33],[23,385,5,33,"o"],[23,386,5,33],[23,387,5,33,"set"],[23,390,5,33],[23,391,5,33,"e"],[23,392,5,33],[23,394,5,33,"f"],[23,395,5,33],[23,411,5,33,"t"],[23,412,5,33],[23,416,5,33,"e"],[23,417,5,33],[23,433,5,33,"t"],[23,434,5,33],[23,441,5,33,"hasOwnProperty"],[23,455,5,33],[23,456,5,33,"call"],[23,460,5,33],[23,461,5,33,"e"],[23,462,5,33],[23,464,5,33,"t"],[23,465,5,33],[23,472,5,33,"i"],[23,473,5,33],[23,477,5,33,"o"],[23,478,5,33],[23,481,5,33,"Object"],[23,487,5,33],[23,488,5,33,"defineProperty"],[23,502,5,33],[23,507,5,33,"Object"],[23,513,5,33],[23,514,5,33,"getOwnPropertyDescriptor"],[23,538,5,33],[23,539,5,33,"e"],[23,540,5,33],[23,542,5,33,"t"],[23,543,5,33],[23,550,5,33,"i"],[23,551,5,33],[23,552,5,33,"get"],[23,555,5,33],[23,559,5,33,"i"],[23,560,5,33],[23,561,5,33,"set"],[23,564,5,33],[23,568,5,33,"o"],[23,569,5,33],[23,570,5,33,"f"],[23,571,5,33],[23,573,5,33,"t"],[23,574,5,33],[23,576,5,33,"i"],[23,577,5,33],[23,581,5,33,"f"],[23,582,5,33],[23,583,5,33,"t"],[23,584,5,33],[23,588,5,33,"e"],[23,589,5,33],[23,590,5,33,"t"],[23,591,5,33],[23,602,5,33,"f"],[23,603,5,33],[23,608,5,33,"e"],[23,609,5,33],[23,611,5,33,"t"],[23,612,5,33],[24,2,1,0],[24,11,1,9,"_extends"],[24,19,1,17,"_extends"],[24,20,1,17],[24,22,1,20],[25,4,1,22],[25,11,1,29,"_extends"],[25,19,1,37],[25,22,1,40,"Object"],[25,28,1,46],[25,29,1,47,"assign"],[25,35,1,53],[25,38,1,56,"Object"],[25,44,1,62],[25,45,1,63,"assign"],[25,51,1,69],[25,52,1,70,"bind"],[25,56,1,74],[25,57,1,75],[25,58,1,76],[25,61,1,79],[25,71,1,89,"n"],[25,72,1,90],[25,74,1,92],[26,6,1,94],[26,11,1,99],[26,15,1,103,"e"],[26,16,1,104],[26,19,1,107],[26,20,1,108],[26,22,1,110,"e"],[26,23,1,111],[26,26,1,114,"arguments"],[26,35,1,123],[26,36,1,124,"length"],[26,42,1,130],[26,44,1,132,"e"],[26,45,1,133],[26,47,1,135],[26,49,1,137],[27,8,1,139],[27,12,1,143,"t"],[27,13,1,144],[27,16,1,147,"arguments"],[27,25,1,156],[27,26,1,157,"e"],[27,27,1,158],[27,28,1,159],[28,8,1,161],[28,13,1,166],[28,17,1,170,"r"],[28,18,1,171],[28,22,1,175,"t"],[28,23,1,176],[28,25,1,178],[28,26,1,179],[28,27,1,180],[28,28,1,181],[28,30,1,183,"hasOwnProperty"],[28,44,1,197],[28,45,1,198,"call"],[28,49,1,202],[28,50,1,203,"t"],[28,51,1,204],[28,53,1,206,"r"],[28,54,1,207],[28,55,1,208],[28,60,1,213,"n"],[28,61,1,214],[28,62,1,215,"r"],[28,63,1,216],[28,64,1,217],[28,67,1,220,"t"],[28,68,1,221],[28,69,1,222,"r"],[28,70,1,223],[28,71,1,224],[28,72,1,225],[29,6,1,227],[30,6,1,229],[30,13,1,236,"n"],[30,14,1,237],[31,4,1,239],[31,5,1,240],[31,7,1,242,"_extends"],[31,15,1,250],[31,16,1,251,"apply"],[31,21,1,256],[31,22,1,257],[31,26,1,261],[31,28,1,263,"arguments"],[31,37,1,272],[31,38,1,273],[32,2,1,275],[33,2,6,0],[33,11,6,9,"missingTag"],[33,21,6,19,"missingTag"],[33,22,6,19],[33,24,6,22],[34,4,7,2],[34,11,7,9],[34,15,7,13],[35,2,8,0],[36,2,9,7],[36,11,9,16,"SvgAst"],[36,17,9,22,"SvgAst"],[36,18,9,23],[37,4,10,2,"ast"],[37,7,10,5],[38,4,11,2,"override"],[39,2,12,0],[39,3,12,1],[39,5,12,3],[40,4,13,2],[40,8,13,6],[40,9,13,7,"ast"],[40,12,13,10],[40,14,13,12],[41,6,14,4],[41,13,14,11],[41,17,14,15],[42,4,15,2],[43,4,16,2],[43,10,16,8],[44,6,17,4,"props"],[44,11,17,9],[45,6,18,4,"children"],[46,4,19,2],[46,5,19,3],[46,8,19,6,"ast"],[46,11,19,9],[47,4,20,2],[47,10,20,8,"Svg"],[47,13,20,11],[47,16,20,14,"tags"],[47,29,20,18],[47,30,20,19,"svg"],[47,33,20,22],[48,4,21,2],[48,11,21,9],[48,24,21,22,"React"],[48,29,21,27],[48,30,21,28,"createElement"],[48,43,21,41],[48,44,21,42,"Svg"],[48,47,21,45],[48,49,21,47,"_extends"],[48,57,21,55],[48,58,21,56],[48,59,21,57],[48,60,21,58],[48,62,21,60,"props"],[48,67,21,65],[48,69,21,67,"override"],[48,77,21,75],[48,78,21,76],[48,80,21,78,"children"],[48,88,21,86],[48,89,21,87],[49,2,22,0],[50,2,23,0],[50,8,23,6,"err"],[50,11,23,9],[50,14,23,12,"console"],[50,21,23,19],[50,22,23,20,"error"],[50,27,23,25],[50,28,23,26,"bind"],[50,32,23,30],[50,33,23,31,"console"],[50,40,23,38],[50,41,23,39],[51,2,24,7],[51,11,24,16,"SvgXml"],[51,17,24,22,"SvgXml"],[51,18,24,23,"props"],[51,23,24,28],[51,25,24,30],[52,4,25,2],[52,10,25,8],[53,6,26,4,"onError"],[53,13,26,11],[53,16,26,14,"err"],[53,19,26,17],[54,6,27,4,"xml"],[54,9,27,7],[55,6,28,4,"override"],[55,14,28,12],[56,6,29,4,"fallback"],[57,4,30,2],[57,5,30,3],[57,8,30,6,"props"],[57,13,30,11],[58,4,31,2],[58,8,31,6],[59,6,32,4],[59,12,32,10,"ast"],[59,15,32,13],[59,18,32,16],[59,22,32,16,"useMemo"],[59,36,32,23],[59,38,32,24],[59,44,32,30,"xml"],[59,47,32,33],[59,52,32,38],[59,56,32,42],[59,59,32,45,"parse"],[59,64,32,50],[59,65,32,51,"xml"],[59,68,32,54],[59,69,32,55],[59,72,32,58],[59,76,32,62],[59,78,32,64],[59,79,32,65,"xml"],[59,82,32,68],[59,83,32,69],[59,84,32,70],[60,6,33,4],[60,13,33,11],[60,26,33,24,"React"],[60,31,33,29],[60,32,33,30,"createElement"],[60,45,33,43],[60,46,33,44,"SvgAst"],[60,52,33,50],[60,54,33,52],[61,8,34,6,"ast"],[61,11,34,9],[61,13,34,11,"ast"],[61,16,34,14],[62,8,35,6,"override"],[62,16,35,14],[62,18,35,16,"override"],[62,26,35,24],[62,30,35,28,"props"],[63,6,36,4],[63,7,36,5],[63,8,36,6],[64,4,37,2],[64,5,37,3],[64,6,37,4],[64,13,37,11,"error"],[64,18,37,16],[64,20,37,18],[65,6,38,4,"onError"],[65,13,38,11],[65,14,38,12,"error"],[65,19,38,17],[65,20,38,18],[66,6,39,4],[66,13,39,11,"fallback"],[66,21,39,19],[66,25,39,23],[66,29,39,27],[67,4,40,2],[68,2,41,0],[69,2,42,7],[69,11,42,16,"SvgUri"],[69,17,42,22,"SvgUri"],[69,18,42,23,"props"],[69,23,42,28],[69,25,42,30],[70,4,43,2],[70,10,43,8],[71,6,44,4,"onError"],[71,13,44,11],[71,16,44,14,"err"],[71,19,44,17],[72,6,45,4,"uri"],[72,9,45,7],[73,6,46,4,"onLoad"],[73,12,46,10],[74,6,47,4,"fallback"],[75,4,48,2],[75,5,48,3],[75,8,48,6,"props"],[75,13,48,11],[76,4,49,2],[76,10,49,8],[76,11,49,9,"xml"],[76,14,49,12],[76,16,49,14,"setXml"],[76,22,49,20],[76,23,49,21],[76,26,49,24],[76,30,49,24,"useState"],[76,45,49,32],[76,47,49,33],[76,51,49,37],[76,52,49,38],[77,4,50,2],[77,10,50,8],[77,11,50,9,"isError"],[77,18,50,16],[77,20,50,18,"setIsError"],[77,30,50,28],[77,31,50,29],[77,34,50,32],[77,38,50,32,"useState"],[77,53,50,40],[77,55,50,41],[77,60,50,46],[77,61,50,47],[78,4,51,2],[78,8,51,2,"useEffect"],[78,24,51,11],[78,26,51,12],[78,32,51,18],[79,6,52,4,"uri"],[79,9,52,7],[79,12,52,10],[79,16,52,10,"fetchText"],[79,36,52,19],[79,38,52,20,"uri"],[79,41,52,23],[79,42,52,24],[79,43,52,25,"then"],[79,47,52,29],[79,48,52,30,"data"],[79,52,52,34],[79,56,52,38],[80,8,53,6,"setXml"],[80,14,53,12],[80,15,53,13,"data"],[80,19,53,17],[80,20,53,18],[81,8,54,6,"isError"],[81,15,54,13],[81,19,54,17,"setIsError"],[81,29,54,27],[81,30,54,28],[81,35,54,33],[81,36,54,34],[82,8,55,6,"onLoad"],[82,14,55,12],[82,19,55,17],[82,23,55,21],[82,27,55,25,"onLoad"],[82,33,55,31],[82,38,55,36],[82,43,55,41],[82,44,55,42],[82,48,55,46,"onLoad"],[82,54,55,52],[82,55,55,53],[82,56,55,54],[83,6,56,4],[83,7,56,5],[83,8,56,6],[83,9,56,7,"catch"],[83,14,56,12],[83,15,56,13,"e"],[83,16,56,14],[83,20,56,18],[84,8,57,6,"onError"],[84,15,57,13],[84,16,57,14,"e"],[84,17,57,15],[84,18,57,16],[85,8,58,6,"setIsError"],[85,18,58,16],[85,19,58,17],[85,23,58,21],[85,24,58,22],[86,6,59,4],[86,7,59,5],[86,8,59,6],[86,11,59,9,"setXml"],[86,17,59,15],[86,18,59,16],[86,22,59,20],[86,23,59,21],[87,6,60,4],[88,4,61,2],[88,5,61,3],[88,7,61,5],[88,8,61,6,"onError"],[88,15,61,13],[88,17,61,15,"uri"],[88,20,61,18],[88,22,61,20,"onLoad"],[88,28,61,26],[88,29,61,27],[88,30,61,28],[89,4,62,2],[89,8,62,6,"isError"],[89,15,62,13],[89,17,62,15],[90,6,63,4],[90,13,63,11,"fallback"],[90,21,63,19],[90,25,63,23],[90,29,63,27],[91,4,64,2],[92,4,65,2],[92,11,65,9],[92,24,65,22,"React"],[92,29,65,27],[92,30,65,28,"createElement"],[92,43,65,41],[92,44,65,42,"SvgXml"],[92,50,65,48],[92,52,65,50],[93,6,66,4,"xml"],[93,9,66,7],[93,11,66,9,"xml"],[93,14,66,12],[94,6,67,4,"override"],[94,14,67,12],[94,16,67,14,"props"],[94,21,67,19],[95,6,68,4,"fallback"],[95,14,68,12],[95,16,68,14,"fallback"],[96,4,69,2],[96,5,69,3],[96,6,69,4],[97,2,70,0],[99,2,72,0],[101,2,74,7],[101,8,74,13,"SvgFromXml"],[101,18,74,23],[101,27,74,32,"Component"],[101,43,74,41],[101,44,74,42],[102,4,75,2,"state"],[102,9,75,7],[102,12,75,10],[103,6,76,4,"ast"],[103,9,76,7],[103,11,76,9],[104,4,77,2],[104,5,77,3],[105,4,78,2,"componentDidMount"],[105,21,78,19,"componentDidMount"],[105,22,78,19],[105,24,78,22],[106,6,79,4],[106,10,79,8],[106,11,79,9,"parse"],[106,16,79,14],[106,17,79,15],[106,21,79,19],[106,22,79,20,"props"],[106,27,79,25],[106,28,79,26,"xml"],[106,31,79,29],[106,32,79,30],[107,4,80,2],[108,4,81,2,"componentDidUpdate"],[108,22,81,20,"componentDidUpdate"],[108,23,81,21,"prevProps"],[108,32,81,30],[108,34,81,32],[109,6,82,4],[109,12,82,10],[110,8,83,6,"xml"],[111,6,84,4],[111,7,84,5],[111,10,84,8],[111,14,84,12],[111,15,84,13,"props"],[111,20,84,18],[112,6,85,4],[112,10,85,8,"xml"],[112,13,85,11],[112,18,85,16,"prevProps"],[112,27,85,25],[112,28,85,26,"xml"],[112,31,85,29],[112,33,85,31],[113,8,86,6],[113,12,86,10],[113,13,86,11,"parse"],[113,18,86,16],[113,19,86,17,"xml"],[113,22,86,20],[113,23,86,21],[114,6,87,4],[115,4,88,2],[116,4,89,2,"parse"],[116,9,89,7,"parse"],[116,10,89,8,"xml"],[116,13,89,11],[116,15,89,13],[117,6,90,4],[117,12,90,10],[118,8,91,6,"onError"],[118,15,91,13],[118,18,91,16,"err"],[119,6,92,4],[119,7,92,5],[119,10,92,8],[119,14,92,12],[119,15,92,13,"props"],[119,20,92,18],[120,6,93,4],[120,10,93,8],[121,8,94,6],[121,12,94,10],[121,13,94,11,"setState"],[121,21,94,19],[121,22,94,20],[122,10,95,8,"ast"],[122,13,95,11],[122,15,95,13,"xml"],[122,18,95,16],[122,21,95,19,"parse"],[122,26,95,24],[122,27,95,25,"xml"],[122,30,95,28],[122,31,95,29],[122,34,95,32],[123,8,96,6],[123,9,96,7],[123,10,96,8],[124,6,97,4],[124,7,97,5],[124,8,97,6],[124,15,97,13,"e"],[124,16,97,14],[124,18,97,16],[125,8,98,6],[125,14,98,12,"error"],[125,19,98,17],[125,22,98,20,"e"],[125,23,98,21],[126,8,99,6,"onError"],[126,15,99,13],[126,16,99,13,"Object"],[126,22,99,13],[126,23,99,13,"assign"],[126,29,99,13],[126,34,100,11,"error"],[126,39,100,16],[127,10,101,8,"message"],[127,17,101,15],[127,19,101,17],[127,58,101,56,"error"],[127,63,101,61],[127,64,101,62,"message"],[127,71,101,69],[128,8,101,71],[128,10,102,7],[128,11,102,8],[129,6,103,4],[130,4,104,2],[131,4,105,2,"render"],[131,10,105,8,"render"],[131,11,105,8],[131,13,105,11],[132,6,106,4],[132,12,106,10],[133,8,107,6,"props"],[133,13,107,11],[134,8,108,6,"state"],[134,13,108,11],[134,15,108,13],[135,10,109,8,"ast"],[136,8,110,6],[137,6,111,4],[137,7,111,5],[137,10,111,8],[137,14,111,12],[138,6,112,4],[138,13,112,11],[138,26,112,24,"React"],[138,31,112,29],[138,32,112,30,"createElement"],[138,45,112,43],[138,46,112,44,"SvgAst"],[138,52,112,50],[138,54,112,52],[139,8,113,6,"ast"],[139,11,113,9],[139,13,113,11,"ast"],[139,16,113,14],[140,8,114,6,"override"],[140,16,114,14],[140,18,114,16,"props"],[140,23,114,21],[140,24,114,22,"override"],[140,32,114,30],[140,36,114,34,"props"],[141,6,115,4],[141,7,115,5],[141,8,115,6],[142,4,116,2],[143,2,117,0],[144,2,117,1,"exports"],[144,9,117,1],[144,10,117,1,"SvgFromXml"],[144,20,117,1],[144,23,117,1,"SvgFromXml"],[144,33,117,1],[145,2,118,7],[145,8,118,13,"SvgFromUri"],[145,18,118,23],[145,27,118,32,"Component"],[145,43,118,41],[145,44,118,42],[146,4,119,2,"state"],[146,9,119,7],[146,12,119,10],[147,6,120,4,"xml"],[147,9,120,7],[147,11,120,9],[148,4,121,2],[148,5,121,3],[149,4,122,2,"componentDidMount"],[149,21,122,19,"componentDidMount"],[149,22,122,19],[149,24,122,22],[150,6,123,4],[150,10,123,8],[150,11,123,9,"fetch"],[150,16,123,14],[150,17,123,15],[150,21,123,19],[150,22,123,20,"props"],[150,27,123,25],[150,28,123,26,"uri"],[150,31,123,29],[150,32,123,30],[151,4,124,2],[152,4,125,2,"componentDidUpdate"],[152,22,125,20,"componentDidUpdate"],[152,23,125,21,"prevProps"],[152,32,125,30],[152,34,125,32],[153,6,126,4],[153,12,126,10],[154,8,127,6,"uri"],[155,6,128,4],[155,7,128,5],[155,10,128,8],[155,14,128,12],[155,15,128,13,"props"],[155,20,128,18],[156,6,129,4],[156,10,129,8,"uri"],[156,13,129,11],[156,18,129,16,"prevProps"],[156,27,129,25],[156,28,129,26,"uri"],[156,31,129,29],[156,33,129,31],[157,8,130,6],[157,12,130,10],[157,13,130,11,"fetch"],[157,18,130,16],[157,19,130,17,"uri"],[157,22,130,20],[157,23,130,21],[158,6,131,4],[159,4,132,2],[160,4,133,2],[160,10,133,8,"fetch"],[160,15,133,13,"fetch"],[160,16,133,14,"uri"],[160,19,133,17],[160,21,133,19],[161,6,134,4],[161,10,134,8],[162,8,135,6],[162,12,135,10],[162,13,135,11,"setState"],[162,21,135,19],[162,22,135,20],[163,10,136,8,"xml"],[163,13,136,11],[163,15,136,13,"uri"],[163,18,136,16],[163,21,136,19],[163,27,136,25],[163,31,136,25,"fetchText"],[163,51,136,34],[163,53,136,35,"uri"],[163,56,136,38],[163,57,136,39],[163,60,136,42],[164,8,137,6],[164,9,137,7],[164,10,137,8],[165,6,138,4],[165,7,138,5],[165,8,138,6],[165,15,138,13,"e"],[165,16,138,14],[165,18,138,16],[166,8,139,6,"console"],[166,15,139,13],[166,16,139,14,"error"],[166,21,139,19],[166,22,139,20,"e"],[166,23,139,21],[166,24,139,22],[167,6,140,4],[168,4,141,2],[169,4,142,2,"render"],[169,10,142,8,"render"],[169,11,142,8],[169,13,142,11],[170,6,143,4],[170,12,143,10],[171,8,144,6,"props"],[171,13,144,11],[172,8,145,6,"state"],[172,13,145,11],[172,15,145,13],[173,10,146,8,"xml"],[174,8,147,6],[175,6,148,4],[175,7,148,5],[175,10,148,8],[175,14,148,12],[176,6,149,4],[176,13,149,11],[176,26,149,24,"React"],[176,31,149,29],[176,32,149,30,"createElement"],[176,45,149,43],[176,46,149,44,"SvgFromXml"],[176,56,149,54],[176,58,149,56],[177,8,150,6,"xml"],[177,11,150,9],[177,13,150,11,"xml"],[177,16,150,14],[178,8,151,6,"override"],[178,16,151,14],[178,18,151,16,"props"],[178,23,151,21],[179,8,152,6,"onError"],[179,15,152,13],[179,17,152,15,"props"],[179,22,152,20],[179,23,152,21,"onError"],[180,6,153,4],[180,7,153,5],[180,8,153,6],[181,4,154,2],[182,2,155,0],[183,2,155,1,"exports"],[183,9,155,1],[183,10,155,1,"SvgFromUri"],[183,20,155,1],[183,23,155,1,"SvgFromUri"],[183,33,155,1],[184,2,156,0],[184,8,156,6,"upperCase"],[184,17,156,15],[184,20,156,18,"upperCase"],[184,21,156,19,"_match"],[184,27,156,25],[184,29,156,27,"letter"],[184,35,156,33],[184,40,156,38,"letter"],[184,46,156,44],[184,47,156,45,"toUpperCase"],[184,58,156,56],[184,59,156,57],[184,60,156,58],[185,2,157,7],[185,8,157,13,"camelCase"],[185,17,157,22],[185,20,157,25,"phrase"],[185,26,157,31],[185,30,157,35,"phrase"],[185,36,157,41],[185,37,157,42,"replace"],[185,44,157,49],[185,45,157,50],[185,59,157,64],[185,61,157,66,"upperCase"],[185,70,157,75],[185,71,157,76],[186,2,157,77,"exports"],[186,9,157,77],[186,10,157,77,"camelCase"],[186,19,157,77],[186,22,157,77,"camelCase"],[186,31,157,77],[187,2,158,7],[187,11,158,16,"getStyle"],[187,19,158,24,"getStyle"],[187,20,158,25,"string"],[187,26,158,31],[187,28,158,33],[188,4,159,2],[188,10,159,8,"style"],[188,15,159,13],[188,18,159,16],[188,19,159,17],[188,20,159,18],[189,4,160,2],[189,10,160,8,"declarations"],[189,22,160,20],[189,25,160,23,"string"],[189,31,160,29],[189,32,160,30,"split"],[189,37,160,35],[189,38,160,36],[189,41,160,39],[189,42,160,40],[189,43,160,41,"filter"],[189,49,160,47],[189,50,160,48,"v"],[189,51,160,49],[189,55,160,53,"v"],[189,56,160,54],[189,57,160,55,"trim"],[189,61,160,59],[189,62,160,60],[189,63,160,61],[189,64,160,62],[190,4,161,2],[190,10,161,8],[191,6,162,4,"length"],[192,4,163,2],[192,5,163,3],[192,8,163,6,"declarations"],[192,20,163,18],[193,4,164,2],[193,9,164,7],[193,13,164,11,"i"],[193,14,164,12],[193,17,164,15],[193,18,164,16],[193,20,164,18,"i"],[193,21,164,19],[193,24,164,22,"length"],[193,30,164,28],[193,32,164,30,"i"],[193,33,164,31],[193,35,164,33],[193,37,164,35],[194,6,165,4],[194,12,165,10,"declaration"],[194,23,165,21],[194,26,165,24,"declarations"],[194,38,165,36],[194,39,165,37,"i"],[194,40,165,38],[194,41,165,39],[195,6,166,4],[195,10,166,8,"declaration"],[195,21,166,19],[195,22,166,20,"length"],[195,28,166,26],[195,33,166,31],[195,34,166,32],[195,36,166,34],[196,8,167,6],[196,14,167,12,"split"],[196,19,167,17],[196,22,167,20,"declaration"],[196,33,167,31],[196,34,167,32,"split"],[196,39,167,37],[196,40,167,38],[196,43,167,41],[196,44,167,42],[197,8,168,6],[197,14,168,12,"property"],[197,22,168,20],[197,25,168,23,"split"],[197,30,168,28],[197,31,168,29],[197,32,168,30],[197,33,168,31],[198,8,169,6],[198,14,169,12,"value"],[198,19,169,17],[198,22,169,20,"split"],[198,27,169,25],[198,28,169,26],[198,29,169,27],[198,30,169,28],[199,8,170,6,"style"],[199,13,170,11],[199,14,170,12,"camelCase"],[199,23,170,21],[199,24,170,22,"property"],[199,32,170,30],[199,33,170,31,"trim"],[199,37,170,35],[199,38,170,36],[199,39,170,37],[199,40,170,38],[199,41,170,39],[199,44,170,42,"value"],[199,49,170,47],[199,50,170,48,"trim"],[199,54,170,52],[199,55,170,53],[199,56,170,54],[200,6,171,4],[201,4,172,2],[202,4,173,2],[202,11,173,9,"style"],[202,16,173,14],[203,2,174,0],[204,2,175,7],[204,11,175,16,"astToReact"],[204,21,175,26,"astToReact"],[204,22,175,27,"value"],[204,27,175,32],[204,29,175,34,"index"],[204,34,175,39],[204,36,175,41],[205,4,176,2],[205,8,176,6],[205,15,176,13,"value"],[205,20,176,18],[205,25,176,23],[205,33,176,31],[205,35,176,33],[206,6,177,4],[206,12,177,10],[207,8,178,6,"Tag"],[207,11,178,9],[208,8,179,6,"props"],[208,13,179,11],[209,8,180,6,"children"],[210,6,181,4],[210,7,181,5],[210,10,181,8,"value"],[210,15,181,13],[211,6,182,4],[211,10,182,8,"props"],[211,15,182,13],[211,20,182,18],[211,24,182,22],[211,28,182,26,"props"],[211,33,182,31],[211,38,182,36],[211,43,182,41],[211,44,182,42],[211,48,182,46,"props"],[211,53,182,51],[211,54,182,52,"class"],[211,59,182,57],[211,61,182,59],[212,8,183,6,"props"],[212,13,183,11],[212,14,183,12,"className"],[212,23,183,21],[212,26,183,24,"props"],[212,31,183,29],[212,32,183,30,"class"],[212,37,183,35],[213,8,184,6],[213,15,184,13,"props"],[213,20,184,18],[213,21,184,19,"class"],[213,26,184,24],[214,6,185,4],[215,6,186,4],[215,13,186,11],[215,26,186,24,"React"],[215,31,186,29],[215,32,186,30,"createElement"],[215,45,186,43],[215,46,186,44,"Tag"],[215,49,186,47],[215,51,186,49,"_extends"],[215,59,186,57],[215,60,186,58],[216,8,187,6,"key"],[216,11,187,9],[216,13,187,11,"index"],[217,6,188,4],[217,7,188,5],[217,9,188,7,"props"],[217,14,188,12],[217,15,188,13],[217,17,188,15,"children"],[217,25,188,23],[217,26,188,24,"map"],[217,29,188,27],[217,30,188,28,"astToReact"],[217,40,188,38],[217,41,188,39],[217,42,188,40],[218,4,189,2],[219,4,190,2],[219,11,190,9,"value"],[219,16,190,14],[220,2,191,0],[222,2,193,0],[224,2,195,0],[224,11,195,9,"repeat"],[224,17,195,15,"repeat"],[224,18,195,16,"str"],[224,21,195,19],[224,23,195,21,"i"],[224,24,195,22],[224,26,195,24],[225,4,196,2],[225,8,196,6,"result"],[225,14,196,12],[225,17,196,15],[225,19,196,17],[226,4,197,2],[226,11,197,9,"i"],[226,12,197,10],[226,14,197,12],[226,16,197,14],[227,6,198,4,"result"],[227,12,198,10],[227,16,198,14,"str"],[227,19,198,17],[228,4,199,2],[229,4,200,2],[229,11,200,9,"result"],[229,17,200,15],[230,2,201,0],[231,2,202,0],[231,8,202,6,"toSpaces"],[231,16,202,14],[231,19,202,17,"tabs"],[231,23,202,21],[231,27,202,25,"repeat"],[231,33,202,31],[231,34,202,32],[231,38,202,36],[231,40,202,38,"tabs"],[231,44,202,42],[231,45,202,43,"length"],[231,51,202,49],[231,52,202,50],[232,2,203,0],[232,11,203,9,"locate"],[232,17,203,15,"locate"],[232,18,203,16,"source"],[232,24,203,22],[232,26,203,24,"i"],[232,27,203,25],[232,29,203,27],[233,4,204,2],[233,10,204,8,"lines"],[233,15,204,13],[233,18,204,16,"source"],[233,24,204,22],[233,25,204,23,"split"],[233,30,204,28],[233,31,204,29],[233,35,204,33],[233,36,204,34],[234,4,205,2],[234,10,205,8,"nLines"],[234,16,205,14],[234,19,205,17,"lines"],[234,24,205,22],[234,25,205,23,"length"],[234,31,205,29],[235,4,206,2],[235,8,206,6,"column"],[235,14,206,12],[235,17,206,15,"i"],[235,18,206,16],[236,4,207,2],[236,8,207,6,"line"],[236,12,207,10],[236,15,207,13],[236,16,207,14],[237,4,208,2],[237,11,208,9,"line"],[237,15,208,13],[237,18,208,16,"nLines"],[237,24,208,22],[237,26,208,24,"line"],[237,30,208,28],[237,32,208,30],[237,34,208,32],[238,6,209,4],[238,12,209,10],[239,8,210,6,"length"],[240,6,211,4],[240,7,211,5],[240,10,211,8,"lines"],[240,15,211,13],[240,16,211,14,"line"],[240,20,211,18],[240,21,211,19],[241,6,212,4],[241,10,212,8,"column"],[241,16,212,14],[241,20,212,18,"length"],[241,26,212,24],[241,28,212,26],[242,8,213,6,"column"],[242,14,213,12],[242,18,213,16,"length"],[242,24,213,22],[243,6,214,4],[243,7,214,5],[243,13,214,11],[244,8,215,6],[245,6,216,4],[246,4,217,2],[247,4,218,2],[247,10,218,8,"before"],[247,16,218,14],[247,19,218,17,"source"],[247,25,218,23],[247,26,218,24,"slice"],[247,31,218,29],[247,32,218,30],[247,33,218,31],[247,35,218,33,"i"],[247,36,218,34],[247,37,218,35],[247,38,218,36,"replace"],[247,45,218,43],[247,46,218,44],[247,52,218,50],[247,54,218,52,"toSpaces"],[247,62,218,60],[247,63,218,61],[248,4,219,2],[248,10,219,8,"beforeExec"],[248,20,219,18],[248,23,219,21],[248,34,219,32],[248,35,219,33,"exec"],[248,39,219,37],[248,40,219,38,"before"],[248,46,219,44],[248,47,219,45],[249,4,220,2],[249,10,220,8,"beforeLine"],[249,20,220,18],[249,23,220,21,"beforeExec"],[249,33,220,31],[249,37,220,35,"beforeExec"],[249,47,220,45],[249,48,220,46],[249,49,220,47],[249,50,220,48],[249,54,220,52],[249,56,220,54],[250,4,221,2],[250,10,221,8,"after"],[250,15,221,13],[250,18,221,16,"source"],[250,24,221,22],[250,25,221,23,"slice"],[250,30,221,28],[250,31,221,29,"i"],[250,32,221,30],[250,33,221,31],[251,4,222,2],[251,10,222,8,"afterExec"],[251,19,222,17],[251,22,222,20],[251,32,222,30],[251,33,222,31,"exec"],[251,37,222,35],[251,38,222,36,"after"],[251,43,222,41],[251,44,222,42],[252,4,223,2],[252,10,223,8,"afterLine"],[252,19,223,17],[252,22,223,20,"afterExec"],[252,31,223,29],[252,35,223,33,"afterExec"],[252,44,223,42],[252,45,223,43],[252,46,223,44],[252,47,223,45],[253,4,224,2],[253,10,224,8,"pad"],[253,13,224,11],[253,16,224,14,"repeat"],[253,22,224,20],[253,23,224,21],[253,26,224,24],[253,28,224,26,"beforeLine"],[253,38,224,36],[253,39,224,37,"length"],[253,45,224,43],[253,46,224,44],[254,4,225,2],[254,10,225,8,"snippet"],[254,17,225,15],[254,20,225,18],[254,23,225,21,"beforeLine"],[254,33,225,31],[254,36,225,34,"afterLine"],[254,45,225,43],[254,50,225,48,"pad"],[254,53,225,51],[254,56,225,54],[255,4,226,2],[255,11,226,9],[256,6,227,4,"line"],[256,10,227,8],[257,6,228,4,"column"],[257,12,228,10],[258,6,229,4,"snippet"],[259,4,230,2],[259,5,230,3],[260,2,231,0],[261,2,232,0],[261,8,232,6,"validNameCharacters"],[261,27,232,25],[261,30,232,28],[261,46,232,44],[262,2,233,0],[262,8,233,6,"commentStart"],[262,20,233,18],[262,23,233,21],[262,29,233,27],[263,2,234,0],[263,8,234,6,"whitespace"],[263,18,234,16],[263,21,234,19],[263,33,234,31],[264,2,235,0],[264,8,235,6,"quotemarks"],[264,18,235,16],[264,21,235,19],[264,27,235,25],[265,2,236,7],[265,11,236,16,"parse"],[265,16,236,21,"parse"],[265,17,236,22,"source"],[265,23,236,28],[265,25,236,30,"middleware"],[265,35,236,40],[265,37,236,42],[266,4,237,2],[266,10,237,8,"length"],[266,16,237,14],[266,19,237,17,"source"],[266,25,237,23],[266,26,237,24,"length"],[266,32,237,30],[267,4,238,2],[267,8,238,6,"currentElement"],[267,22,238,20],[267,25,238,23],[267,29,238,27],[268,4,239,2],[268,8,239,6,"state"],[268,13,239,11],[268,16,239,14,"metadata"],[268,24,239,22],[269,4,240,2],[269,8,240,6,"children"],[269,16,240,14],[269,19,240,17],[269,23,240,21],[270,4,241,2],[270,8,241,6,"root"],[270,12,241,10],[271,4,242,2],[271,10,242,8,"stack"],[271,15,242,13],[271,18,242,16],[271,20,242,18],[272,4,243,2],[272,13,243,11,"error"],[272,18,243,16,"error"],[272,19,243,17,"message"],[272,26,243,24],[272,28,243,26],[273,6,244,4],[273,12,244,10],[274,8,245,6,"line"],[274,12,245,10],[275,8,246,6,"column"],[275,14,246,12],[276,8,247,6,"snippet"],[277,6,248,4],[277,7,248,5],[277,10,248,8,"locate"],[277,16,248,14],[277,17,248,15,"source"],[277,23,248,21],[277,25,248,23,"i"],[277,26,248,24],[277,27,248,25],[278,6,249,4],[278,12,249,10],[278,16,249,14,"Error"],[278,21,249,19],[278,22,249,20],[278,25,249,23,"message"],[278,32,249,30],[278,37,249,35,"line"],[278,41,249,39],[278,45,249,43,"column"],[278,51,249,49],[278,125,249,123,"snippet"],[278,132,249,130],[278,134,249,132],[278,135,249,133],[279,4,250,2],[280,4,251,2],[280,13,251,11,"metadata"],[280,21,251,19,"metadata"],[280,22,251,19],[280,24,251,22],[281,6,252,4],[281,13,252,11,"i"],[281,14,252,12],[281,17,252,15],[281,18,252,16],[281,21,252,19,"length"],[281,27,252,25],[281,32,252,30,"source"],[281,38,252,36],[281,39,252,37,"i"],[281,40,252,38],[281,41,252,39],[281,46,252,44],[281,49,252,47],[281,53,252,51],[281,55,252,53,"validNameCharacters"],[281,74,252,72],[281,75,252,73,"test"],[281,79,252,77],[281,80,252,78,"source"],[281,86,252,84],[281,87,252,85,"i"],[281,88,252,86],[281,91,252,89],[281,92,252,90],[281,93,252,91],[281,94,252,92],[281,98,252,96,"commentStart"],[281,110,252,108],[281,111,252,109,"test"],[281,115,252,113],[281,116,252,114,"source"],[281,122,252,120],[281,123,252,121,"slice"],[281,128,252,126],[281,129,252,127,"i"],[281,130,252,128],[281,132,252,130,"i"],[281,133,252,131],[281,136,252,134],[281,137,252,135],[281,138,252,136],[281,139,252,137],[281,140,252,138],[281,141,252,139],[281,143,252,141],[282,8,253,6,"i"],[282,9,253,7],[282,11,253,9],[283,6,254,4],[284,6,255,4],[284,13,255,11,"neutral"],[284,20,255,18],[284,21,255,19],[284,22,255,20],[285,4,256,2],[286,4,257,2],[286,13,257,11,"neutral"],[286,20,257,18,"neutral"],[286,21,257,18],[286,23,257,21],[287,6,258,4],[287,10,258,8,"text"],[287,14,258,12],[287,17,258,15],[287,19,258,17],[288,6,259,4],[288,10,259,8,"char"],[288,14,259,12],[289,6,260,4],[289,13,260,11,"i"],[289,14,260,12],[289,17,260,15,"length"],[289,23,260,21],[289,27,260,25],[289,28,260,26,"char"],[289,32,260,30],[289,35,260,33,"source"],[289,41,260,39],[289,42,260,40,"i"],[289,43,260,41],[289,44,260,42],[289,50,260,48],[289,53,260,51],[289,55,260,53],[290,8,261,6,"text"],[290,12,261,10],[290,16,261,14,"char"],[290,20,261,18],[291,8,262,6,"i"],[291,9,262,7],[291,13,262,11],[291,14,262,12],[292,6,263,4],[293,6,264,4],[293,10,264,8],[293,14,264,12],[293,15,264,13,"test"],[293,19,264,17],[293,20,264,18,"text"],[293,24,264,22],[293,25,264,23],[293,27,264,25],[294,8,265,6,"children"],[294,16,265,14],[294,17,265,15,"push"],[294,21,265,19],[294,22,265,20,"text"],[294,26,265,24],[294,27,265,25],[295,6,266,4],[296,6,267,4],[296,10,267,8,"source"],[296,16,267,14],[296,17,267,15,"i"],[296,18,267,16],[296,19,267,17],[296,24,267,22],[296,27,267,25],[296,29,267,27],[297,8,268,6],[297,15,268,13,"openingTag"],[297,25,268,23],[298,6,269,4],[299,6,270,4],[299,13,270,11,"neutral"],[299,20,270,18],[300,4,271,2],[301,4,272,2],[301,13,272,11,"openingTag"],[301,23,272,21,"openingTag"],[301,24,272,21],[301,26,272,24],[302,6,273,4],[302,12,273,10,"char"],[302,16,273,14],[302,19,273,17,"source"],[302,25,273,23],[302,26,273,24,"i"],[302,27,273,25],[302,28,273,26],[303,6,274,4],[303,10,274,8,"char"],[303,14,274,12],[303,19,274,17],[303,22,274,20],[303,24,274,22],[304,8,275,6],[304,15,275,13,"neutral"],[304,22,275,20],[305,6,276,4],[305,7,276,5],[305,8,276,6],[307,6,278,4],[307,10,278,8,"char"],[307,14,278,12],[307,19,278,17],[307,22,278,20],[307,24,278,22],[308,8,279,6],[308,14,279,12,"start"],[308,19,279,17],[308,22,279,20,"i"],[308,23,279,21],[308,26,279,24],[308,27,279,25],[309,8,280,6],[309,12,280,10,"source"],[309,18,280,16],[309,19,280,17,"slice"],[309,24,280,22],[309,25,280,23,"start"],[309,30,280,28],[309,32,280,30,"i"],[309,33,280,31],[309,36,280,34],[309,37,280,35],[309,38,280,36],[309,43,280,41],[309,47,280,45],[309,49,280,47],[310,10,281,8],[310,17,281,15,"comment"],[310,24,281,22],[311,8,282,6],[312,8,283,6],[312,14,283,12,"end"],[312,17,283,15],[312,20,283,18,"i"],[312,21,283,19],[312,24,283,22],[312,25,283,23],[313,8,284,6],[313,12,284,10,"source"],[313,18,284,16],[313,19,284,17,"slice"],[313,24,284,22],[313,25,284,23,"start"],[313,30,284,28],[313,32,284,30,"end"],[313,35,284,33],[313,36,284,34],[313,41,284,39],[313,50,284,48],[313,52,284,50],[314,10,285,8],[314,17,285,15,"cdata"],[314,22,285,20],[315,8,286,6],[316,8,287,6],[316,12,287,10],[316,22,287,20],[316,23,287,21,"test"],[316,27,287,25],[316,28,287,26,"source"],[316,34,287,32],[316,35,287,33,"slice"],[316,40,287,38],[316,41,287,39,"start"],[316,46,287,44],[316,48,287,46,"end"],[316,51,287,49],[316,52,287,50],[316,53,287,51],[316,55,287,53],[317,10,288,8],[317,17,288,15,"neutral"],[317,24,288,22],[318,8,289,6],[319,6,290,4],[320,6,291,4],[320,10,291,8,"char"],[320,14,291,12],[320,19,291,17],[320,22,291,20],[320,24,291,22],[321,8,292,6],[321,15,292,13,"closingTag"],[321,25,292,23],[322,6,293,4],[323,6,294,4],[323,12,294,10,"tag"],[323,15,294,13],[323,18,294,16,"getName"],[323,25,294,23],[323,26,294,24],[323,27,294,25],[324,6,295,4],[324,12,295,10,"props"],[324,17,295,15],[324,20,295,18],[324,21,295,19],[324,22,295,20],[325,6,296,4],[325,12,296,10,"element"],[325,19,296,17],[325,22,296,20],[326,8,297,6,"tag"],[326,11,297,9],[327,8,298,6,"props"],[327,13,298,11],[328,8,299,6,"children"],[328,16,299,14],[328,18,299,16],[328,20,299,18],[329,8,300,6,"parent"],[329,14,300,12],[329,16,300,14,"currentElement"],[329,30,300,28],[330,8,301,6,"Tag"],[330,11,301,9],[330,13,301,11,"tags"],[330,26,301,15],[330,27,301,16,"tag"],[330,30,301,19],[330,31,301,20],[330,35,301,24,"missingTag"],[331,6,302,4],[331,7,302,5],[332,6,303,4],[332,10,303,8,"currentElement"],[332,24,303,22],[332,26,303,24],[333,8,304,6,"children"],[333,16,304,14],[333,17,304,15,"push"],[333,21,304,19],[333,22,304,20,"element"],[333,29,304,27],[333,30,304,28],[334,6,305,4],[334,7,305,5],[334,13,305,11],[335,8,306,6,"root"],[335,12,306,10],[335,15,306,13,"element"],[335,22,306,20],[336,6,307,4],[337,6,308,4,"getAttributes"],[337,19,308,17],[337,20,308,18,"props"],[337,25,308,23],[337,26,308,24],[338,6,309,4],[338,12,309,10],[339,8,310,6,"style"],[340,6,311,4],[340,7,311,5],[340,10,311,8,"props"],[340,15,311,13],[341,6,312,4],[341,10,312,8],[341,17,312,15,"style"],[341,22,312,20],[341,27,312,25],[341,35,312,33],[341,37,312,35],[342,8,313,6,"element"],[342,15,313,13],[342,16,313,14,"styles"],[342,22,313,20],[342,25,313,23,"style"],[342,30,313,28],[343,8,314,6,"props"],[343,13,314,11],[343,14,314,12,"style"],[343,19,314,17],[343,22,314,20,"getStyle"],[343,30,314,28],[343,31,314,29,"style"],[343,36,314,34],[343,37,314,35],[344,6,315,4],[345,6,316,4],[345,10,316,8,"selfClosing"],[345,21,316,19],[345,24,316,22],[345,29,316,27],[346,6,317,4],[346,10,317,8,"source"],[346,16,317,14],[346,17,317,15,"i"],[346,18,317,16],[346,19,317,17],[346,24,317,22],[346,27,317,25],[346,29,317,27],[347,8,318,6,"i"],[347,9,318,7],[347,13,318,11],[347,14,318,12],[348,8,319,6,"selfClosing"],[348,19,319,17],[348,22,319,20],[348,26,319,24],[349,6,320,4],[350,6,321,4],[350,10,321,8,"source"],[350,16,321,14],[350,17,321,15,"i"],[350,18,321,16],[350,19,321,17],[350,24,321,22],[350,27,321,25],[350,29,321,27],[351,8,322,6,"error"],[351,13,322,11],[351,14,322,12],[351,26,322,24],[351,27,322,25],[352,6,323,4],[353,6,324,4],[353,10,324,8],[353,11,324,9,"selfClosing"],[353,22,324,20],[353,24,324,22],[354,8,325,6,"currentElement"],[354,22,325,20],[354,25,325,23,"element"],[354,32,325,30],[355,8,326,6],[355,9,326,7],[356,10,327,8,"children"],[357,8,328,6],[357,9,328,7],[357,12,328,10,"element"],[357,19,328,17],[358,8,329,6,"stack"],[358,13,329,11],[358,14,329,12,"push"],[358,18,329,16],[358,19,329,17,"element"],[358,26,329,24],[358,27,329,25],[359,6,330,4],[360,6,331,4],[360,13,331,11,"neutral"],[360,20,331,18],[361,4,332,2],[362,4,333,2],[362,13,333,11,"comment"],[362,20,333,18,"comment"],[362,21,333,18],[362,23,333,21],[363,6,334,4],[363,12,334,10,"index"],[363,17,334,15],[363,20,334,18,"source"],[363,26,334,24],[363,27,334,25,"indexOf"],[363,34,334,32],[363,35,334,33],[363,40,334,38],[363,42,334,40,"i"],[363,43,334,41],[363,44,334,42],[364,6,335,4],[364,10,335,8],[364,11,335,9],[364,12,335,10,"index"],[364,17,335,15],[364,19,335,17],[365,8,336,6,"error"],[365,13,336,11],[365,14,336,12],[365,28,336,26],[365,29,336,27],[366,6,337,4],[367,6,338,4,"i"],[367,7,338,5],[367,10,338,8,"index"],[367,15,338,13],[367,18,338,16],[367,19,338,17],[368,6,339,4],[368,13,339,11,"neutral"],[368,20,339,18],[369,4,340,2],[370,4,341,2],[370,13,341,11,"cdata"],[370,18,341,16,"cdata"],[370,19,341,16],[370,21,341,19],[371,6,342,4],[371,12,342,10,"index"],[371,17,342,15],[371,20,342,18,"source"],[371,26,342,24],[371,27,342,25,"indexOf"],[371,34,342,32],[371,35,342,33],[371,40,342,38],[371,42,342,40,"i"],[371,43,342,41],[371,44,342,42],[372,6,343,4],[372,10,343,8],[372,11,343,9],[372,12,343,10,"index"],[372,17,343,15],[372,19,343,17],[373,8,344,6,"error"],[373,13,344,11],[373,14,344,12],[373,28,344,26],[373,29,344,27],[374,6,345,4],[375,6,346,4,"children"],[375,14,346,12],[375,15,346,13,"push"],[375,19,346,17],[375,20,346,18,"source"],[375,26,346,24],[375,27,346,25,"slice"],[375,32,346,30],[375,33,346,31,"i"],[375,34,346,32],[375,37,346,35],[375,38,346,36],[375,40,346,38,"index"],[375,45,346,43],[375,46,346,44],[375,47,346,45],[376,6,347,4,"i"],[376,7,347,5],[376,10,347,8,"index"],[376,15,347,13],[376,18,347,16],[376,19,347,17],[377,6,348,4],[377,13,348,11,"neutral"],[377,20,348,18],[378,4,349,2],[379,4,350,2],[379,13,350,11,"closingTag"],[379,23,350,21,"closingTag"],[379,24,350,21],[379,26,350,24],[380,6,351,4],[380,12,351,10,"tag"],[380,15,351,13],[380,18,351,16,"getName"],[380,25,351,23],[380,26,351,24],[380,27,351,25],[381,6,352,4],[381,10,352,8],[381,11,352,9,"tag"],[381,14,352,12],[381,16,352,14],[382,8,353,6,"error"],[382,13,353,11],[382,14,353,12],[382,33,353,31],[382,34,353,32],[383,6,354,4],[384,6,355,4],[384,10,355,8,"currentElement"],[384,24,355,22],[384,28,355,26,"tag"],[384,31,355,29],[384,36,355,34,"currentElement"],[384,50,355,48],[384,51,355,49,"tag"],[384,54,355,52],[384,56,355,54],[385,8,356,6,"error"],[385,13,356,11],[385,14,356,12],[385,40,356,38,"tag"],[385,43,356,41],[385,70,356,68,"currentElement"],[385,84,356,82],[385,85,356,83,"tag"],[385,88,356,86],[385,91,356,89],[385,92,356,90],[386,6,357,4],[387,6,358,4,"allowSpaces"],[387,17,358,15],[387,18,358,16],[387,19,358,17],[388,6,359,4],[388,10,359,8,"source"],[388,16,359,14],[388,17,359,15,"i"],[388,18,359,16],[388,19,359,17],[388,24,359,22],[388,27,359,25],[388,29,359,27],[389,8,360,6,"error"],[389,13,360,11],[389,14,360,12],[389,26,360,24],[389,27,360,25],[390,6,361,4],[391,6,362,4,"stack"],[391,11,362,9],[391,12,362,10,"pop"],[391,15,362,13],[391,16,362,14],[391,17,362,15],[392,6,363,4,"currentElement"],[392,20,363,18],[392,23,363,21,"stack"],[392,28,363,26],[392,29,363,27,"stack"],[392,34,363,32],[392,35,363,33,"length"],[392,41,363,39],[392,44,363,42],[392,45,363,43],[392,46,363,44],[393,6,364,4],[393,10,364,8,"currentElement"],[393,24,364,22],[393,26,364,24],[394,8,365,6],[394,9,365,7],[395,10,366,8,"children"],[396,8,367,6],[396,9,367,7],[396,12,367,10,"currentElement"],[396,26,367,24],[397,6,368,4],[398,6,369,4],[398,13,369,11,"neutral"],[398,20,369,18],[399,4,370,2],[400,4,371,2],[400,13,371,11,"getName"],[400,20,371,18,"getName"],[400,21,371,18],[400,23,371,21],[401,6,372,4],[401,10,372,8,"name"],[401,14,372,12],[401,17,372,15],[401,19,372,17],[402,6,373,4],[402,10,373,8,"char"],[402,14,373,12],[403,6,374,4],[403,13,374,11,"i"],[403,14,374,12],[403,17,374,15,"length"],[403,23,374,21],[403,27,374,25,"validNameCharacters"],[403,46,374,44],[403,47,374,45,"test"],[403,51,374,49],[403,52,374,50,"char"],[403,56,374,54],[403,59,374,57,"source"],[403,65,374,63],[403,66,374,64,"i"],[403,67,374,65],[403,68,374,66],[403,69,374,67],[403,71,374,69],[404,8,375,6,"name"],[404,12,375,10],[404,16,375,14,"char"],[404,20,375,18],[405,8,376,6,"i"],[405,9,376,7],[405,13,376,11],[405,14,376,12],[406,6,377,4],[407,6,378,4],[407,13,378,11,"name"],[407,17,378,15],[408,4,379,2],[409,4,380,2],[409,13,380,11,"getAttributes"],[409,26,380,24,"getAttributes"],[409,27,380,25,"props"],[409,32,380,30],[409,34,380,32],[410,6,381,4],[410,13,381,11,"i"],[410,14,381,12],[410,17,381,15,"length"],[410,23,381,21],[410,25,381,23],[411,8,382,6],[411,12,382,10],[411,13,382,11,"whitespace"],[411,23,382,21],[411,24,382,22,"test"],[411,28,382,26],[411,29,382,27,"source"],[411,35,382,33],[411,36,382,34,"i"],[411,37,382,35],[411,38,382,36],[411,39,382,37],[411,41,382,39],[412,10,383,8],[413,8,384,6],[414,8,385,6,"allowSpaces"],[414,19,385,17],[414,20,385,18],[414,21,385,19],[415,8,386,6],[415,14,386,12,"name"],[415,18,386,16],[415,21,386,19,"getName"],[415,28,386,26],[415,29,386,27],[415,30,386,28],[416,8,387,6],[416,12,387,10],[416,13,387,11,"name"],[416,17,387,15],[416,19,387,17],[417,10,388,8],[418,8,389,6],[419,8,390,6],[419,12,390,10,"value"],[419,17,390,15],[419,20,390,18],[419,24,390,22],[420,8,391,6,"allowSpaces"],[420,19,391,17],[420,20,391,18],[420,21,391,19],[421,8,392,6],[421,12,392,10,"source"],[421,18,392,16],[421,19,392,17,"i"],[421,20,392,18],[421,21,392,19],[421,26,392,24],[421,29,392,27],[421,31,392,29],[422,10,393,8,"i"],[422,11,393,9],[422,15,393,13],[422,16,393,14],[423,10,394,8,"allowSpaces"],[423,21,394,19],[423,22,394,20],[423,23,394,21],[424,10,395,8,"value"],[424,15,395,13],[424,18,395,16,"getAttributeValue"],[424,35,395,33],[424,36,395,34],[424,37,395,35],[425,10,396,8],[425,14,396,12,"name"],[425,18,396,16],[425,23,396,21],[425,27,396,25],[425,31,396,29],[425,32,396,30,"isNaN"],[425,37,396,35],[425,38,396,36],[425,39,396,37,"value"],[425,44,396,42],[425,45,396,43],[425,49,396,47,"value"],[425,54,396,52],[425,55,396,53,"trim"],[425,59,396,57],[425,60,396,58],[425,61,396,59],[425,66,396,64],[425,68,396,66],[425,70,396,68],[426,12,397,10,"value"],[426,17,397,15],[426,20,397,18],[426,21,397,19,"value"],[426,26,397,24],[427,10,398,8],[428,8,399,6],[429,8,400,6,"props"],[429,13,400,11],[429,14,400,12,"camelCase"],[429,23,400,21],[429,24,400,22,"name"],[429,28,400,26],[429,29,400,27],[429,30,400,28],[429,33,400,31,"value"],[429,38,400,36],[430,6,401,4],[431,4,402,2],[432,4,403,2],[432,13,403,11,"getAttributeValue"],[432,30,403,28,"getAttributeValue"],[432,31,403,28],[432,33,403,31],[433,6,404,4],[433,13,404,11,"quotemarks"],[433,23,404,21],[433,24,404,22,"test"],[433,28,404,26],[433,29,404,27,"source"],[433,35,404,33],[433,36,404,34,"i"],[433,37,404,35],[433,38,404,36],[433,39,404,37],[433,42,404,40,"getQuotedAttributeValue"],[433,65,404,63],[433,66,404,64],[433,67,404,65],[433,70,404,68,"getUnquotedAttributeValue"],[433,95,404,93],[433,96,404,94],[433,97,404,95],[434,4,405,2],[435,4,406,2],[435,13,406,11,"getUnquotedAttributeValue"],[435,38,406,36,"getUnquotedAttributeValue"],[435,39,406,36],[435,41,406,39],[436,6,407,4],[436,10,407,8,"value"],[436,15,407,13],[436,18,407,16],[436,20,407,18],[437,6,408,4],[437,9,408,7],[438,8,409,6],[438,14,409,12,"char"],[438,18,409,16],[438,21,409,19,"source"],[438,27,409,25],[438,28,409,26,"i"],[438,29,409,27],[438,30,409,28],[439,8,410,6],[439,12,410,10,"char"],[439,16,410,14],[439,21,410,19],[439,24,410,22],[439,28,410,26,"char"],[439,32,410,30],[439,37,410,35],[439,40,410,38],[439,44,410,42,"char"],[439,48,410,46],[439,53,410,51],[439,56,410,54],[439,58,410,56],[440,10,411,8],[440,17,411,15,"value"],[440,22,411,20],[441,8,412,6],[442,8,413,6,"value"],[442,13,413,11],[442,17,413,15,"char"],[442,21,413,19],[443,8,414,6,"i"],[443,9,414,7],[443,13,414,11],[443,14,414,12],[444,6,415,4],[444,7,415,5],[444,15,415,13,"i"],[444,16,415,14],[444,19,415,17,"length"],[444,25,415,23],[445,6,416,4],[445,13,416,11,"value"],[445,18,416,16],[446,4,417,2],[447,4,418,2],[447,13,418,11,"getQuotedAttributeValue"],[447,36,418,34,"getQuotedAttributeValue"],[447,37,418,34],[447,39,418,37],[448,6,419,4],[448,12,419,10,"quotemark"],[448,21,419,19],[448,24,419,22,"source"],[448,30,419,28],[448,31,419,29,"i"],[448,32,419,30],[448,34,419,32],[448,35,419,33],[449,6,420,4],[449,10,420,8,"value"],[449,15,420,13],[449,18,420,16],[449,20,420,18],[450,6,421,4],[450,10,421,8,"escaped"],[450,17,421,15],[450,20,421,18],[450,25,421,23],[451,6,422,4],[451,13,422,11,"i"],[451,14,422,12],[451,17,422,15,"length"],[451,23,422,21],[451,25,422,23],[452,8,423,6],[452,14,423,12,"char"],[452,18,423,16],[452,21,423,19,"source"],[452,27,423,25],[452,28,423,26,"i"],[452,29,423,27],[452,31,423,29],[452,32,423,30],[453,8,424,6],[453,12,424,10,"char"],[453,16,424,14],[453,21,424,19,"quotemark"],[453,30,424,28],[453,34,424,32],[453,35,424,33,"escaped"],[453,42,424,40],[453,44,424,42],[454,10,425,8],[454,17,425,15,"value"],[454,22,425,20],[455,8,426,6],[456,8,427,6],[456,12,427,10,"char"],[456,16,427,14],[456,21,427,19],[456,25,427,23],[456,29,427,27],[456,30,427,28,"escaped"],[456,37,427,35],[456,39,427,37],[457,10,428,8,"escaped"],[457,17,428,15],[457,20,428,18],[457,24,428,22],[458,8,429,6],[459,8,430,6,"value"],[459,13,430,11],[459,17,430,15,"escaped"],[459,24,430,22],[459,27,430,25],[459,32,430,30,"char"],[459,36,430,34],[459,38,430,36],[459,41,430,39,"char"],[459,45,430,43],[460,8,431,6,"escaped"],[460,15,431,13],[460,18,431,16],[460,23,431,21],[461,6,432,4],[462,6,433,4],[462,13,433,11,"value"],[462,18,433,16],[463,4,434,2],[464,4,435,2],[464,13,435,11,"allowSpaces"],[464,24,435,22,"allowSpaces"],[464,25,435,22],[464,27,435,25],[465,6,436,4],[465,13,436,11,"i"],[465,14,436,12],[465,17,436,15,"length"],[465,23,436,21],[465,27,436,25,"whitespace"],[465,37,436,35],[465,38,436,36,"test"],[465,42,436,40],[465,43,436,41,"source"],[465,49,436,47],[465,50,436,48,"i"],[465,51,436,49],[465,52,436,50],[465,53,436,51],[465,55,436,53],[466,8,437,6,"i"],[466,9,437,7],[466,13,437,11],[466,14,437,12],[467,6,438,4],[468,4,439,2],[469,4,440,2],[469,8,440,6,"i"],[469,9,440,7],[469,12,440,10],[469,13,440,11],[470,4,441,2],[470,11,441,9,"i"],[470,12,441,10],[470,15,441,13,"length"],[470,21,441,19],[470,23,441,21],[471,6,442,4],[471,10,442,8],[471,11,442,9,"state"],[471,16,442,14],[471,18,442,16],[472,8,443,6,"error"],[472,13,443,11],[472,14,443,12],[472,36,443,34],[472,37,443,35],[473,6,444,4],[474,6,445,4,"state"],[474,11,445,9],[474,14,445,12,"state"],[474,19,445,17],[474,20,445,18],[474,21,445,19],[475,6,446,4,"i"],[475,7,446,5],[475,11,446,9],[475,12,446,10],[476,4,447,2],[477,4,448,2],[477,8,448,6,"state"],[477,13,448,11],[477,18,448,16,"neutral"],[477,25,448,23],[477,27,448,25],[478,6,449,4,"error"],[478,11,449,9],[478,12,449,10],[478,37,449,35],[478,38,449,36],[479,4,450,2],[480,4,451,2],[480,8,451,6,"root"],[480,12,451,10],[480,14,451,12],[481,6,452,4],[481,12,452,10,"xml"],[481,15,452,13],[481,18,452,16],[481,19,452,17,"middleware"],[481,29,452,27],[481,32,452,30,"middleware"],[481,42,452,40],[481,43,452,41,"root"],[481,47,452,45],[481,48,452,46],[481,51,452,49,"root"],[481,55,452,53],[481,60,452,58,"root"],[481,64,452,62],[482,6,453,4],[482,12,453,10,"ast"],[482,15,453,13],[482,18,453,16,"xml"],[482,21,453,19],[482,22,453,20,"children"],[482,30,453,28],[482,31,453,29,"map"],[482,34,453,32],[482,35,453,33,"astToReact"],[482,45,453,43],[482,46,453,44],[483,6,454,4],[483,12,454,10,"jsx"],[483,15,454,13],[483,18,454,16,"xml"],[483,21,454,19],[484,6,455,4,"jsx"],[484,9,455,7],[484,10,455,8,"children"],[484,18,455,16],[484,21,455,19,"ast"],[484,24,455,22],[485,6,456,4],[485,13,456,11,"jsx"],[485,16,456,14],[486,4,457,2],[487,4,458,2],[487,11,458,9],[487,15,458,13],[488,2,459,0],[489,0,459,1],[489,3]],"functionMap":{"names":["_extends","<anonymous>","<global>","missingTag","SvgAst","SvgXml","useMemo$argument_0","SvgUri","useEffect$argument_0","fetchText.then$argument_0","fetchText.then._catch$argument_0","SvgFromXml","SvgFromXml#componentDidMount","SvgFromXml#componentDidUpdate","SvgFromXml#parse","SvgFromXml#render","SvgFromUri","SvgFromUri#componentDidMount","SvgFromUri#componentDidUpdate","SvgFromUri#fetch","SvgFromUri#render","upperCase","camelCase","getStyle","string.split.filter$argument_0","astToReact","repeat","toSpaces","locate","parse","error","metadata","neutral","openingTag","comment","cdata","closingTag","getName","getAttributes","getAttributeValue","getUnquotedAttributeValue","getQuotedAttributeValue","allowSpaces"],"mappings":"AAA,+EC,iKD,oCE;ACK;CDE;OEC;CFa;OGE;wBCQ,sCD;CHS;OKC;YCS;8BCC;KDI,QE;KFG;GDE;CLS;OSI;ECI;GDE;EEC;GFO;EGC;GHe;EIC;GJW;CTC;OcC;ECI;GDE;EEC;GFO;EGC;GHQ;EIC;GJY;CdC;kBmBC,wCnB;yBoBC,mDpB;OqBC;gDCE,aD;CrBc;OuBC;CvBgB;AwBI;CxBM;iByBC,iCzB;A0BC;C1B4B;O2BK;ECO;GDO;EEC;GFK;EGC;GHc;EIC;GJ4D;EKC;GLO;EMC;GNQ;EOC;GPoB;EQC;GRQ;ESC;GTsB;EUC;GVE;EWC;GXW;EYC;GZgB;EaC;GbI;C3BoB"}},"type":"js/module"}]}